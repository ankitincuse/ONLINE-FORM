-- Create tables with proper ID handling for Supabase
CREATE TABLE form_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL,
    email VARCHAR(100),
    address TEXT NOT NULL,
    dob DATE NOT NULL,
    joining_date DATE NOT NULL,
    aadhar_number VARCHAR(12) NOT NULL,
    pan_number VARCHAR(10),
    father_name VARCHAR(100) NOT NULL,
    height DECIMAL(5, 2),
    weight DECIMAL(5, 2),
    passport_photo_url TEXT,
    aadhar_card_url TEXT,
    bank_details_url TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE academic_details (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    form_id BIGINT REFERENCES form_data(id) ON DELETE CASCADE,
    qualification VARCHAR(100) NOT NULL,
    institute VARCHAR(100) NOT NULL,
    passing_year INTEGER NOT NULL,
    percentage DECIMAL(5, 2) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE reference_details (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    form_id BIGINT REFERENCES form_data(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    contact VARCHAR(15) NOT NULL,
    relation VARCHAR(50) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create admin users table if not exists
CREATE TABLE IF NOT EXISTS admin_users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Enable Row Level Security (RLS)
ALTER TABLE form_data ENABLE ROW LEVEL SECURITY;
ALTER TABLE academic_details ENABLE ROW LEVEL SECURITY;
ALTER TABLE reference_details ENABLE ROW LEVEL SECURITY;
ALTER TABLE admin_users ENABLE ROW LEVEL SECURITY;

-- Create policies to allow all operations (for testing purposes)
CREATE POLICY "Allow all operations for form_data" ON form_data
    FOR ALL USING (true);

CREATE POLICY "Allow all operations for academic_details" ON academic_details
    FOR ALL USING (true);

CREATE POLICY "Allow all operations for reference_details" ON reference_details
    FOR ALL USING (true);

CREATE POLICY "Allow all operations for admin_users" ON admin_users
    FOR ALL USING (true);

-- Create admin user with hashed password (ADMIN@123)
INSERT INTO admin_users (username, password_hash) 
VALUES ('admin', '$2b$10$YourHashedPasswordHere');
