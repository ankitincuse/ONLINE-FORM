-- Create form_data table
DROP TABLE IF EXISTS form_data CASCADE;

CREATE TABLE form_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL,
    email VARCHAR(100),
    address TEXT NOT NULL,
    dob DATE NOT NULL,
    joining_date DATE NOT NULL,
    aadhar_number VARCHAR(20) NOT NULL,
    father_name VARCHAR(100) NOT NULL,
    height DECIMAL(5,2),
    weight DECIMAL(5,2),
    passport_photo_url TEXT,
    aadhar_card_url TEXT,
    bank_doc_url TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Enable RLS
ALTER TABLE form_data ENABLE ROW LEVEL SECURITY;

-- Create policy
CREATE POLICY "Enable read access for all users" ON form_data
    FOR SELECT TO anon
    USING (true);

CREATE POLICY "Enable insert for anon" ON form_data
    FOR INSERT TO anon
    WITH CHECK (true);

CREATE POLICY "Enable update for anon" ON form_data
    FOR UPDATE TO anon
    USING (true)
    WITH CHECK (true);

-- Grant permissions
GRANT ALL ON form_data TO anon;
GRANT USAGE ON SEQUENCE form_data_id_seq TO anon;

-- Create academic_details table
DROP TABLE IF EXISTS academic_details CASCADE;

CREATE TABLE academic_details (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    form_id BIGINT REFERENCES form_data(id) ON DELETE CASCADE,
    qualification VARCHAR(100) NOT NULL,
    institute VARCHAR(200) NOT NULL,
    passing_year INTEGER NOT NULL,
    percentage DECIMAL(5,2) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Enable RLS
ALTER TABLE academic_details ENABLE ROW LEVEL SECURITY;

-- Create policy
CREATE POLICY "Enable read access for all users" ON academic_details
    FOR SELECT TO anon
    USING (true);

CREATE POLICY "Enable insert for anon" ON academic_details
    FOR INSERT TO anon
    WITH CHECK (true);

CREATE POLICY "Enable update for anon" ON academic_details
    FOR UPDATE TO anon
    USING (true)
    WITH CHECK (true);

-- Grant permissions
GRANT ALL ON academic_details TO anon;
GRANT USAGE ON SEQUENCE academic_details_id_seq TO anon;

-- Create reference_details table
DROP TABLE IF EXISTS reference_details CASCADE;

CREATE TABLE reference_details (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    form_id BIGINT REFERENCES form_data(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL,
    relation VARCHAR(100) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Enable RLS
ALTER TABLE reference_details ENABLE ROW LEVEL SECURITY;

-- Create policy
CREATE POLICY "Enable read access for all users" ON reference_details
    FOR SELECT TO anon
    USING (true);

CREATE POLICY "Enable insert for anon" ON reference_details
    FOR INSERT TO anon
    WITH CHECK (true);

CREATE POLICY "Enable update for anon" ON reference_details
    FOR UPDATE TO anon
    USING (true)
    WITH CHECK (true);

-- Grant permissions
GRANT ALL ON reference_details TO anon;
GRANT USAGE ON SEQUENCE reference_details_id_seq TO anon;

-- Create company_settings table
CREATE TABLE IF NOT EXISTS company_settings (
    id INTEGER PRIMARY KEY,
    logo_url TEXT,
    logo_width INTEGER,
    logo_height INTEGER,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Insert initial company settings
INSERT INTO company_settings (id, logo_url, logo_width, logo_height, updated_at)
VALUES (1, NULL, NULL, NULL, NOW())
ON CONFLICT (id) DO NOTHING;
