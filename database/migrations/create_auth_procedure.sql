-- Drop existing function if exists
DROP FUNCTION IF EXISTS authenticate_admin;

-- Create function to authenticate admin and return user data
CREATE OR REPLACE FUNCTION authenticate_admin(
    p_username TEXT,
    p_password TEXT
)
RETURNS TABLE (
    id BIGINT,
    username TEXT,
    authenticated BOOLEAN
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        a.id,
        a.username,
        TRUE as authenticated
    FROM admin_users a
    WHERE a.username = p_username
    AND a.password_hash = crypt(p_password, a.password_hash);
END;
$$;

-- Drop and recreate admin table
DROP TABLE IF EXISTS admin_users CASCADE;

-- Create admin_users table
CREATE TABLE admin_users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create index
CREATE INDEX idx_admin_users_username ON admin_users(username);

-- Insert test admin
INSERT INTO admin_users (username, password_hash)
VALUES (
    'admin',
    crypt('Admin@123', gen_salt('bf', 10))
);

-- Test the function
SELECT * FROM authenticate_admin('admin', 'Admin@123');
