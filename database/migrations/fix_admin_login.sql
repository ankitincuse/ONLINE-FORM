-- Enable pgcrypto extension if not already enabled
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Drop existing admin_users table
DROP TABLE IF EXISTS admin_users CASCADE;

-- Create admin_users table with additional fields
CREATE TABLE admin_users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    login_attempts INT DEFAULT 0,
    locked_until TIMESTAMPTZ,
    last_login TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create index on username
CREATE INDEX idx_admin_users_username ON admin_users(username);

-- Create admin password verification function
CREATE OR REPLACE FUNCTION verify_admin_password(p_username TEXT, p_password TEXT)
RETURNS BOOLEAN
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    RETURN EXISTS (
        SELECT 1
        FROM admin_users
        WHERE username = p_username
        AND password_hash = crypt(p_password, password_hash)
    );
END;
$$;

-- Insert default admin user with properly hashed password
INSERT INTO admin_users (username, password_hash)
VALUES (
    'admin',
    crypt('Admin@123', gen_salt('bf'))
);
